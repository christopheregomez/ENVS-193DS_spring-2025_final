---
title: "final_TEMPLATE"
date: 2025-06-07 
author: Chris Gomez
format: html
format: html
toc: true
execute: 
  warning: false
  message: false
link: https://github.com/christopheregomez/ENVS-193DS_spring-2025_final.git 
---

# Setup
```{r}
library(tidyverse)
library(here)
library(gt)
library(janitor)
library(knitr)
library(rmarkdown)
library(lubridate)
library(dplyr)
library(tibble)
library(DHARMa)
library(MuMIn)
library(broom)
library(ggeffects)
library(scales)

sst <- read_csv(
  here("data", "SST_update2023.csv")) # creating object for sst data
nest_boxes <- read_csv(
  here("data", "occdist.csv")) # creating object for nest data 
```

# Problem 1. Research writing 

## a. 

In part 1, they used a Pearson's r correlation test. In part 2, they used a one-way ANOVA test.

## b.

I believe their Pearson's r test should have included both a correlation coefficient and a 95% confidence interval. The addition of the correlation coefficient would be useful because it helps the reader understand and quantify the relationship between the two variables by telling the strength and direction of a linear relationship. The 95% CI would be useful because it provides a range of plausible values for the true correlation coefficient for example, a narrow CI indicates a precise estimate while a wide CI suggests uncertainty. This is important because it indicates how precisely the sample correlation coefficient estimates the variables correlation, and it can be used to assess the statistical significance of the correlation. Since the p-value in this example is 0.03 this confirms the results are statistically significant at the 0.05 level. Even though the correlation is statistically significant, the confidence interval could indicate that the true strength of the relationship is still somewhat uncertain. 

## c. 

We found a statistically significant positive correlation between distance from headwater (km) and annual total nitrogen load (kg year⁻¹), indicating that nitrogen load tends to change downstream. We rejected the null hypothesis of no correlation (Pearson’s correlation, r(test statistic) = correlation coefficient, p = 0.03, α = significance level). This suggests that nitrogen levels are different downstream, 95% CI: [lower bound, upper bound] kg year⁻¹.

We found a significant difference (η² = effect size) in mean nitrogen load between urban land (n = sample size), atmospheric deposition (n = sample size), fertilizer (n = sample size), wastewater treatment (n = sample size), and grasslands (n = sample size) (One-way ANOVA, F(degrees of freedom) = F-value, p = 0.02, α = significance level). On average, nitrogen load (kg year⁻¹) from urban land, atmospheric deposition, fertilizer, wastewater treatment, and grasslands were all different, 95% CI: [lower bound, upper bound] kg year⁻¹. 

# Problem 2. Data Visualization 

## a. 

```{r}
sst_clean <- sst |> # creating new clean object from "sst"
  clean_names() |>  # clean column names
  mutate( # changes to data frame
    year = year(date), # isolates year from date
    month = month(date), # isolates month from date
    month = month.abb[month]) |> # renames month number to month name
  group_by(year, # group by year
           month) |> # group by month
  summarise(temp = mean(temp, # takes mean temp by each month per year
                        na.rm = TRUE), # convert character month to ordered factor
            .groups = "drop") |> # ungroups the data post-summary
  select(year, # isolates year
         month, # isolates month
         mean_monthly_sst = temp) |> # isolates temp and renames to "mean_monthly_sst"
  filter(year %in% c(2018:2023)) |> # filter years from 2018-2023
  mutate( # changes data frame
    year = factor(year, # converts year to categorical variable
                  levels = as.character(2018:2023)), # orders years
    month = factor(month, # converts month to categorical variable
                   levels = month.abb, # sets Jan–Dec order
                   ordered = TRUE)) # makes it an ordered factor 

slice_sample(sst_clean, n = 5) # randomly displays 5 rows from "sst_clean"
str(sst_clean) # compact summary of the structure of "sst_clean"
```

## b. 

```{r}
ggplot(data = sst_clean, # uses sst_clean data frame
       aes(x = month, # makes x-axis
           y = mean_monthly_sst, # makes y-axis
           color = as.numeric(as.character(year)), # allows scale color gradient to work with a factor 
           group = year)) + # groups points by year
  geom_point() + # adds data points
  geom_line() + # adds a line connecting the years
  scale_color_gradient( # orders years from lightest to darkest in order from oldest to recent 
    low = "chartreuse", # year 2018
    high = "darkgreen", # year 2023
    name = "Year", # legend title
    breaks = 2018:2023, # ensures all years are shown properly in the legend
    labels = 2018:2023, # ensures all years are labeled properly in the legend
    guide = guide_colorbar(reverse = TRUE)) + # reverses the legend 2018 at top, 2023 at bottom
  labs( # labels
    x = "Month", # x-axis label
    y = "Mean monthly sea surface temperature (°C)", # y-axis label
    color = "Year") + # color coded by year 
  guides(color = guide_legend(override.aes = list(shape = 16))) + # makes legend data point shape a closed circle with a horizontal line 
  theme_bw() + # theme
  theme(panel.grid = element_blank(), # removes grid 
        legend.position = c(0.1, 0.75), # puts legend inside panel on top left 
        axis.title.x = element_text(size = 13), # makes x-axis title font bigger
        axis.title.y.left = element_text(size = 13)) # makes y-axis font bigger
```









